
services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: resonance-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - resonance-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Node.js API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: resonance-landing-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DATABASE}?authSource=admin
      - BREVO_API_KEY=${BREVO_API_KEY}
      - BRIGHTDATA_API_KEY=${BRIGHTDATA_API_KEY}
      - WEBHOOK_URL=${WEBHOOK_URL}
    ports:
      - "4000:4000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - resonance-network
    command: npm start



volumes:
  mongodb_data:
    driver: local

networks:
  resonance-network:
    driver: bridge
